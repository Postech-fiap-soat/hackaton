name: Continuous Delivery
on:
  push:
    branches: [ master ]
jobs:
#  build:
#    name: Execute Build
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - name: Use Node.js 16.x
#        uses: actions/setup-node@v2
#        with:
#          node-version: 16.x
#          cache: 'npm'
#      - run: npm ci
#      - run: npm run build --if-present

#  test:
#    name: Run Unit Tests
#    runs-on: ubuntu-latest
#    needs: build
#    steps:
#      - uses: actions/checkout@v2
#      - name: Use Node.js 16.x
#        uses: actions/setup-node@v2
#        with:
#          node-version: 16.x
#          cache: 'npm'
#      - run: npm install
#      - run: npm test

#  sonar-scanner:
#    name: Scanner Quality Code
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - uses: actions/setup-node@v2
#        with:
#          node-version: 16.x
#          cache: 'npm'
#      - run: npm ci
#      - run: npm run test:cov
#      - name: SonarCloud Scan
#        uses: SonarSource/sonarcloud-github-action@master
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ vars.DOCKER_IMAGE }}
          tags: latest
      - name: Build and push Docker image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

#  deploy:
#    name: Deploy Application
#    runs-on: ubuntu-latest
#    needs: [push_to_registry, infra_validation, deploy_lambda]
#    steps:
#      - uses: actions/checkout@v4
#      - name: Configure AWS Credentials Action For GitHub Actions
#        uses: aws-actions/configure-aws-credentials@v1
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: us-east-1
#      - name: KUBECTL
#        uses: azure/setup-kubectl@v3
#      - run: aws sts get-caller-identity
#      - run: aws eks update-kubeconfig --region us-east-1 --name no2-soat-ntsoatcluster
#      - run: kubectl get svc
#      - run: kubectl delete configmap soatapp-configmap
#      - run: kubectl delete secret secrets
#      - run: kubectl delete deploy soatapp-deployment
#      - run: kubectl apply -f ./api/k8s/soatapp-configmap.yml
#      - run: kubectl apply -f ./api/k8s/secrets.yml
#      - run: kubectl apply -f ./api/k8s/soatapp.yml
#      - run: kubectl apply -f ./api/k8s/soatapp-svc.yml